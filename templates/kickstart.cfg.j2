# {{ ks.version }}
# role: jomrr.kickstart
# file: {{ template_destpath }}

{% if ks.template | default('') | length > 0 %}
{{ ks.template }}
{% else %}
eula        --agreed

# initial setup
firstboot   --disable
{% if ks.target | default('') | length > 0 %}

# installation environment
{{ ks.target }}
{% endif %}
{% if ks.bootloader | default('') | length > 0 %}

# bootloader configuration
{{ ks.bootloader }}
{% endif %}
{% if ks.clearpart | default('') | length > 0 %}

# clearpart
{{ ks.clearpart }}
{% endif %}
{% if ks.zerombr | default('') | length > 0 %}

# zerombr
{{ ks.zerombr }}
{% endif %}
{% if ks.url | default('') | length > 0 %}

# installation mirror
{{ ks.url }}
{% endif %}
{% if ks.repos | default([]) | length > 0 %}

# repository configuration
{%  for repo in ks.repos %}
{{ repo }}
{%  endfor %}
{% endif %}
{% if ks.partitions | default([]) | length > 0 %}

# partitions
{%  for part in ks.partitions %}
{{ part }}
{%  endfor %}
{%  if ks.btrfs_volumes | default([]) | length > 0 %}

# btrfs volumes
{%      for btrfs_volume in ks.btrfs_volumes %}
{{ btrfs_volume }}
{%      endfor %}
{%  endif %}
{%  if ks.btrfs_subvolumes | default([]) | length > 0 %}

# btrfs subvolumes
{%      for btrfs_subvolume in ks.btrfs_subvolumes %}
{{ btrfs_subvolume }}
{%      endfor %}
{%  endif %}
{%  if ks.volgroups | default([]) | length > 0 %}

# volume groups
{%      for vg in ks.volgroups %}
{{ vg }}
{%      endfor %}
{%  endif %}
{%  if ks.logvols | default([]) | length > 0 %}

# logical volumes
{%      for lv in ks.logvols %}
{{ lv }}
{%      endfor %}
{%  endif %}
{% elif ks.autopart | default([]) | length > 0 %}

# automatic partioning
{{ ks.autopart }}
{% elif ks.reqpart | default([]) | length > 0 %}

# required partitions
{{ ks.reqpart }}
{% endif %}
{% if ks.networks | default([]) | length > 0 %}

# network configuration
{%  for network in ks.networks %}
{{ network }}
{%  endfor %}
{% endif %}
{% if ks.firewall | default('') | length > 0 %}

# firewall
{{ ks.firewall }}
{% endif %}
{% if ks.services | default('') | length > 0 %}

# services
{{ ks.services }}
{% endif %}
{% if ks.timezone | default('') | length > 0 %}

# timezone
{{ ks.timezone }}
{% endif %}
{% if ks.timesource | default('') | length > 0 %}

# timesource: ntp server, pool or disable
{{ ks.timesource }}
{% endif %}
{% if ks.keyboard | default('') | length > 0 %}

# keyboard
{{ ks.keyboard }}
{% endif %}
{% if ks.language | default('') | length > 0 %}

# language
{{ ks.language }}
{% endif %}
{% if ks.selinux | default('') | length > 0 %}

# selinux
{{ ks.selinux }}
{% endif %}
{% if ks.skipx | default(true) | bool %}

# do not configure x window system
skipx
{% endif %}
{% if ks.xconfig | default('') | length > 0 %}

# configure x window system
{{ ks.xconfig }}
{% endif %}
{% if ks.authselect | default('') | length > 0 %}

# configure authentication
{{ ks.authselect }}
{% endif %}
{% if ks.groups | default([]) | length > 0 %}

# create user groups
{%  for group in ks.groups %}
{{ group }}
{%  endfor %}
{% endif %}
{% if ks.users | default([]) | length > 0 %}

# create users
{%  for user in ks.users %}
{{ user }}
{%  endfor %}
{% endif %}
{% if ks.rootpw | default('') | length > 0 %}

# root password
{{ ks.rootpw }}
{% endif %}
{% if ks.sshkeys | default([]) | length > 0 %}

# add ssh key(s) to authorized_keys
{%  for sshkey in ks.sshkeys %}
{{ sshkey }}
{%  endfor %}
{% endif %}
{% if ks.sshpw | default('') | length > 0 %}

# restrict ssh access during installation
{{ ks.sshpw }}
{% endif %}
{% if ks.realm | default('') | length > 0 %}

# join realm or ad domain
{{ ks.realm }}
{% endif %}
{% if ks.vnc | default('') | length > 0 %}

# vnc remote access
{{ ks.vnc }}
{% endif %}
{% if ks.packages | default([]) | length > 0 %}

# packages to install and remove
%packages   --ignoremissing
{{ ks.packages | join("\n") }}
%end
{% endif %}
{% if ks.pwpolicies | default([]) | length > 0 %}

# password policies
%anaconda
{%  for pwpolicy in ks.pwpolicies %}
{{ pwpolicy }}
{%  endfor %}
%end
{% endif %}
{% if ks.post | default('') | length > 0 %}

# disable kernel dumps
%addon com_redhat_kdump --disable
%end

# post-install actions
%post --log=/root/postinstall.log
{{ ks.post }}
%end
{% endif %}
{% if ks.finish | default('reboot --eject') | length > 0 %}

# system operation after installation (halt, reboot, poweroff, shutdown)
{{ ks.finish }}
{% endif %}
{% endif %}
